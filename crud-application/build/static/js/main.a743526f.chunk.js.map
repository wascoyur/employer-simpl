{"version":3,"sources":["services/db-access.js","component/Header.js","services/http-service.js","services/dao-service.js","component/ItemList.js","component/Entity.js","component/EditEntity.js","component/AddEntity.js","App.js","index.js"],"names":["pool","require","createPool","host","user","password","database","module","exports","Header","Navbar","navbar","bg","Nav","Item","to","Component","axios","create","baseURL","headers","http","get","id","data","post","put","delete","strAtr","ItemList","state","entityList","currentEntity","currentIndex","searchNameEntity","componentDidMount","retriveEntitys","GetlistService","getAll","then","response","setState","console","log","refreshList","currrentEntity","removeAllEntitys","deleteAll","catch","e","findByTitle","onChangeSearchName","searchName","target","value","prevProps","prevState","snapshot","this","entity","index","props","className","type","placeholder","onChange","onClick","map","setActiveEntity","name","length","item","parent","children","timestamp","toString","stringAtribute","current","Entity","onChangeName","Date","onChangeParent","onChangeChildren","onChangeStringAtribute","Pool","query","published","submitted","obj","addItem","number","newEntity","htmlFor","required","disabled","submit","EditEntity","AddEntity","countEntity","Button","countItem","App","entityCount","filter","push","path","render","exact","ReactDOM","document","getElementById"],"mappings":"qGAAA,IAEMA,EAFQC,EAAQ,KAEHC,WAAW,CAC5BC,KAAM,YACNC,KAAM,OACNC,SAAU,GACVC,SAAU,gBAmBZC,EAAOC,QAAUR,G,gdCpBIS,G,8KAErB,OACE,eAACC,EAAA,EAAD,CAAQC,OAAO,SAAUC,GAAG,OAA5B,UACE,cAACC,EAAA,EAAIC,KAAL,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,cAACF,EAAA,EAAIC,KAAL,UACE,cAAC,IAAD,CAAMC,GAAG,QAAT,2BAEF,cAACF,EAAA,EAAIC,KAAL,UACE,cAAC,IAAD,CAAMC,GAAG,OAAT,0BAEF,cAACF,EAAA,EAAIC,KAAL,UACF,cAAC,IAAD,CAAMC,GAAG,QAAT,kC,GAdgCC,c,SCHrBC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yBACTC,QAAS,CACP,eAAe,sBC0BJ,M,iGA3Bb,OAAOC,EAAKC,IAAI,W,0BAEbC,GACH,OAAOF,EAAKC,IAAL,gBAAkBC,M,6BAGnBC,GACN,OAAOH,EAAKI,KAAK,QAASD,K,6BAGpBD,EAAIC,GACV,OAAOH,EAAKK,IAAL,gBAAkBH,GAAMC,K,6BAGzBD,GACN,OAAOF,EAAKM,OAAL,gBAAqBJ,M,kCAI5B,OAAOF,EAAKM,OAAL,W,kCAGIC,GACX,OAAOP,EAAKC,IAAL,+BAAiCM,Q,MCvBrBC,E,4MAEjBC,MAAQ,CACNC,WAAW,GACXC,cAAe,KACfC,cAAe,EACfC,iBAAiB,I,EAGnBC,kBAAoB,WAClB,EAAKC,kB,EAMTA,eAAe,WACXC,EAAeC,SACZC,MAAK,SAAAC,GACJ,EAAKC,SAAS,CACZV,WAAWS,EAAShB,OAEtBkB,QAAQC,IAAI,iBAAiBH,EAAShB,U,EAG5CoB,YAAY,WACV,EAAKR,iBACL,EAAKK,SAAS,CACZI,eAAgB,KAChBZ,cAAe,K,EASrBa,iBAAiB,WACfT,EAAeU,YACZR,MAAK,SAAAC,GACJE,QAAQC,IAAIH,EAAShB,MACrB,EAAKoB,iBAENI,OAAM,SAAAC,GACLP,QAAQC,IAAIM,O,EAGlBf,iBAAiB,WACfG,EAAea,YAAY,EAAKpB,MAAMI,kBACnCK,MAAK,SAAAC,GACJ,EAAKC,SAAS,CACZV,WAAYS,EAAShB,OAEvBkB,QAAQC,IAAIH,EAAShB,SAEtBwB,OAAM,SAAAC,GACLP,QAAQC,IAAIM,O,EAGlBE,mBAAmB,SAACF,GAChB,IAAOG,EAAaH,EAAEI,OAAOC,MAC7B,EAAKb,SAAS,CACZP,iBAAiBkB,K,iEAnDJG,EAAWC,EAAWC,GACnBC,KAAK5B,Q,sCAmBX6B,EAAQC,GACtBF,KAAKjB,SAAS,CACZT,cAAe2B,EACf1B,aAAc2B,M,+BA+BT,IAAD,SAC+DF,KAAK5B,MAAnEI,EADD,EACCA,iBAAkBH,EADnB,EACmBA,WAAYC,EAD/B,EAC+BA,cAAeC,EAD9C,EAC8CA,aAC7C0B,EAAUD,KAAKG,MAAfF,OACP,OACE,sBAAKG,UAAU,WAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBACEC,KAAK,OACLD,UAAU,eACVE,YAAY,qFACZV,MAAOpB,EACP+B,SAAUP,KAAKP,qBAEjB,qBAAKW,UAAU,qBAAf,SACE,wBACEA,UAAU,4BACVC,KAAK,SACLG,QAASR,KAAKxB,iBAHhB,oGAUN,sBAAK4B,UAAU,WAAf,UACE,kJAEA,oBAAIA,UAAU,aAAd,SACG/B,GACDA,EAAWoC,KAAI,SAACpC,EAAY6B,GAAb,OACb,oBACEE,UACE,oBACCF,IAAU3B,EAAe,SAAW,IAEvCiC,QAAS,kBAAM,EAAKE,gBAAgBrC,EAAY6B,IALlD,SAQG7B,EAAWsC,MAFPT,WAcb,sBAAKE,UAAU,WAAf,UACE,uLAAkCJ,KAAKG,MAAMF,OAAOW,UAEpD,oBAAIR,UAAU,aAAd,SACGH,GACDA,EAAOQ,KAAI,SAACI,EAAMX,GAAP,OACT,oBACEE,UACE,oBACCF,IAAU3B,EAAe,SAAW,IAEvCiC,QAAS,kBAAM,EAAKE,gBAAgBG,EAAMX,IAL5C,SAQGW,EAAKF,MAFDT,WAQb,qBAAKE,UAAU,WAAf,SACG9B,EACC,gCACE,kFACA,gCACE,gCACE,4GACO,IACRA,EAAcqC,QAEjB,gCACE,gCACE,wFACO,IACRrC,EAAcwC,UAEjB,gCACE,gCACE,kFACO,IACRxC,EAAcyC,YAGjB,gCACE,gCACE,kHACO,IACRzC,EAAc0C,UAAUC,cAE3B,gCACE,gCACE,0IACO,IACR3C,EAAc4C,kBAGjB,cAAC,IAAD,CACEC,QAAWnB,KAAK5B,MAAME,cACtBjB,GAAI,SAAWiB,EAAcqC,KAC7BP,UAAU,sBAHZ,qBAUF,gCACE,uBACA,kJ,GAzLwB9C,a,iJCCjB8D,E,4MACpBhD,MAAQ,CACPuC,KAAM,cACN9C,GAAI,EACJiD,OAAQ,KACRC,SAAU,GACVG,eAAgB,GAChBF,UAAW,G,EAKXK,aAAe,SAAC9B,GACd,EAAKR,SAAS,CACZ4B,KAAMpB,EAAEI,OAAOC,MAClBoB,UAAU,EAAKA,e,EAGjBA,UAAY,WACV,OAAO,IAAIM,M,EAEZC,eAAe,SAAChC,GACd,EAAKR,SAAS,CACZ+B,OAAQvB,EAAEI,OAAOC,S,EAItB4B,iBAAiB,SAACjC,GACjB,EAAKR,SAAS,CACbgC,SAAUxB,EAAEI,OAAOC,S,EAGrB6B,uBAAuB,SAAClC,GACvB,EAAKR,SAAS,CACbmC,eAAgB3B,EAAEI,OAAOC,S,2DAxBzBI,KAAKjB,SAAS,M,mCA8BLiB,KAAK5B,MAAMuC,KACJX,KAAK5B,MAAM8C,eAE5BQ,IAAKC,MACJ,gFADD,IAEU3B,KAAK5B,MAAMuC,S,kCAoBnBX,KAAKjB,SAAS,CACZlB,GAAI,KACJ8C,KAAM,GACTO,eAAgB,GACbU,WAAW,EACXC,WAAW,M,sFAMGhC,EAAWC,EAAWC,M,6BAElC+B,GACN9B,KAAKG,MAAM4B,QAAQ/B,KAAK5B,OACxBY,QAAQC,IAAI6C,K,+BAKH,IAAD,SAQJ9B,KAAK5B,MARD,EAEPuC,KAFO,EAGP9C,GAHO,EAIPiD,OAJO,EAKPC,SALO,EAMPiB,OANO,EAOPd,eAED,OACC,qBAAKd,UAAU,cAAf,SACEJ,KAAK5B,MAAMyD,UACX,gCACC,mKACA,wBAAQzB,UAAU,kBAAkBI,QAASR,KAAKiC,UAAlD,oBAKD,gCACC,sBAAK7B,UAAU,aAAf,UACC,uBAAO8B,QAAQ,OAAf,iFACA,uBACC7B,KAAK,OACLD,UAAU,eACVvC,GAAG,OACHsE,UAAQ,EACRvC,MAAOI,KAAK5B,MAAMuC,KAClBJ,SAAUP,KAAKqB,aACfV,KAAK,aAIP,sBAAKP,UAAU,aAAf,UACC,uBAAO8B,QAAQ,cAAf,+GACA,uBACC7B,KAAK,OACLD,UAAU,eACVvC,GAAG,iBACHsE,UAAQ,EACRvC,MAAOI,KAAK5B,MAAM8C,eAClBX,SAAUP,KAAKyB,uBACfd,KAAK,sBAGP,sBAAKP,UAAU,aAAf,UACC,uBAAO8B,QAAQ,SAAf,iIACA,uBACC7B,KAAK,OACLD,UAAU,eACVvC,GAAG,SAEH+B,MAAOI,KAAK5B,MAAM0C,OAClBP,SAAUP,KAAKuB,eACfZ,KAAK,cAED,sBAAKP,UAAU,aAAf,UACL,uBAAO8B,QAAQ,WAAf,+GACA,uBACC7B,KAAK,OACLD,UAAU,eACVvC,GAAG,WAEH+B,MAAOI,KAAK5B,MAAM2C,SAClBR,SAAUP,KAAKwB,iBACfb,KAAK,aAEP,sBAAKP,UAAU,aAAf,UACC,uBAAO8B,QAAQ,KAAf,6FACA,uBACC7B,KAAK,OACLD,UAAU,eACVvC,GAAG,KAEH+B,MAAOI,KAAK5B,MAAMP,GAClB0C,SAAU,WACTvB,QAAQC,IAAI,iBACb0B,KAAK,aAGD,sBAAKP,UAAU,aAAf,UACL,uBAAO8B,QAAQ,YAAf,6FACA,uBACC7B,KAAK,OACLD,UAAU,eACVvC,GAAG,YAEHuE,UAAQ,EACRxC,MAAOI,KAAK5B,MAAM4C,UAClBT,SAAU,WACTvB,QAAQC,IAAI,sBACb0B,KAAK,iBAKP,wBAECH,QAAS,kBAAK,EAAK6B,OAAO,EAAKjE,QAE/BgC,UAAU,kBAJX,iG,GArL8B9C,aCDfgF,E,uKAEjB,OACE,8BACE,cAAC,EAAD,U,GAJgChF,a,SCAnBiF,E,4MACnBnE,MAAQ,CACN6B,OAAQmB,EACRoB,YAAa,G,uDAEN,IAAD,EACuBxC,KAAK5B,MAD5B,EACA6B,OADA,EACQuC,YAChB,OAEI,gCACE,cAAC,EAAD,CACET,QAAY/B,KAAKG,MAAM4B,UAGzB,qBAAK3B,UAAU,aAAf,SACE,uBAAO8B,QAAQ,YAWjB,qBAAK9B,UAAU,aAAf,SACE,eAACqC,EAAA,EAAD,CACEL,UAAQ,EADV,UAEGpC,KAAKG,MAAMuC,UAFd,sG,GA3B6BpF,aCKlBqF,E,4MACrBvE,MAAQ,CACR6B,OAAQ,I,EAER2C,YAAc,WAEZ,OADiB,EAAKxE,MAAf6B,OAEEW,Q,EAGTmB,QAAU,SAAClB,GACU,EAAKzC,MAAhB6B,OACgB4C,QAAO,SAAAtD,GAAC,OAAIA,EAAEoB,MAAQE,EAAKF,QACtCC,OAAQ,GACrB,EAAK7B,UAAS,SAACX,GACb,OAAOA,EAAM6B,OAAO6C,KAAKjC,O,uDAIpB,IAAD,OACR,OACE,cAAC,WAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CACEkC,KAAO,QACPC,OAAU,SAAC7C,GAAD,OACR,cAAC,EAAD,CAAWF,OAAU,EAAK7B,MAAM6B,UAElCgD,OAAK,IACL,cAAC,IAAD,CACAF,KAAO,YACPC,OAAU,SAAC7C,GAAD,OACR,cAAC,EAAD,CAASF,OAAU,EAAK7B,MAAM6B,UAEhCgD,OAAK,IACP,cAAC,IAAD,CACEF,KAAO,QACPC,OAAU,SAAC7C,GAAD,OACV,cAAC,EAAD,CAAYF,OAAU,EAAK7B,MAAM6B,YAEnC,cAAC,IAAD,CACA8C,KAAO,OACPC,OAAW,SAAC7C,GAAD,OACT,cAAC,EAAD,CACA4B,QAAY,EAAKA,QACjBW,UAAW,EAAKE,iBAEhBK,OAAK,a,GAhDkB3F,a,OCJjC4F,IAASF,OACL,cAAC,EAAD,IACFG,SAASC,eAAe,W","file":"static/js/main.a743526f.chunk.js","sourcesContent":["const mysql = require('mysql');\r\n\r\nconst pool = mysql.createPool({\r\n  host: 'localhost',\r\n  user: 'root',\r\n  password: '',\r\n  database: 'crud_simple'\r\n});\r\n\r\n// con.connect((err) => {\r\n//   if(err){\r\n//     console.log('Error connecting to Db');\r\n//     return;\r\n//   }\r\n//   console.log('Connection established');\r\n// });\r\n//\r\n// con.query('SELECT * FROM `main-taible`',(err, rows) =>{\r\n//   if(err) throw err;\r\n//   console.log('Data received from Db:', rows)\r\n// })\r\n// con.end((err) => {\r\n//   console.log('connection close')\r\n// });\r\n\r\nmodule.exports = pool;","import React, { Component } from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport './header.css'\r\n\r\nexport default class Header extends Component{\r\nrender(){\r\nreturn(\r\n  <Navbar navbar=\"expand\"  bg=\"dark\">\r\n    <Nav.Item>\r\n        <Link to=\"/\" >Home</Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Link to=\"/list\" >Entity List</Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Link to=\"/add\">Entity Add</Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n    <Link to=\"/edit\">Entity Redo</Link>\r\n                </Nav.Item>   \r\n  </Navbar>\r\n  )\r\n}\r\n}","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:3306/\",\r\n  headers: {\r\n    \"Content-type\":\"application/json\"\r\n  }\r\n})","import http from './http-service';\r\n\r\nclass GetlistService {\r\n\tgetAll() {\r\n\t\treturn http.get('/list');\r\n\t}\r\n\tget(id) {\r\n\t\treturn http.get(`/list/${id}`);\r\n\t}\r\n\r\n\tcreate(data) {\r\n\t\treturn http.post('/list', data);\r\n\t}\r\n\r\n\tupdate(id, data) {\r\n\t\treturn http.put(`/list/${id}`, data);\r\n\t}\r\n\r\n\tdelete(id) {\r\n\t\treturn http.delete(`/list/${id}`);\r\n\t}\r\n\r\n\tdeleteAll() {\r\n\t\treturn http.delete(`/list`);\r\n\t}\r\n\r\n\tfindByTitle(strAtr) {\r\n\t\treturn http.get(`/list?stringAtribute=${strAtr}`);\r\n\t}\r\n}\r\n\r\nexport default new GetlistService();\r\n","import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport GetlistService from '../services/dao-service'\r\n\r\nexport default class ItemList extends Component{\r\n  \r\n    state = {\r\n      entityList:[],\r\n      currentEntity: null,\r\n      currentIndex: -1,\r\n      searchNameEntity:''\r\n    }\r\n    \r\n    componentDidMount = ()=> {\r\n      this.retriveEntitys();\r\n    }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n      if (prevState === this.state)return\r\n    }\r\n  \r\n  retriveEntitys=()=>{\r\n      GetlistService.getAll()\r\n        .then(response =>{\r\n          this.setState({\r\n            entityList:response.data\r\n          });\r\n          console.log('response.data:',response.data)\r\n        })\r\n    }\r\n    refreshList=()=>{\r\n      this.retriveEntitys();\r\n      this.setState({\r\n        currrentEntity: null,\r\n        currentIndex: -1\r\n      })\r\n    }\r\n  setActiveEntity(entity, index) {\r\n    this.setState({\r\n      currentEntity: entity,\r\n      currentIndex: index\r\n    });\r\n  }\r\n  removeAllEntitys=()=> {\r\n    GetlistService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n  searchNameEntity=()=> {\r\n    GetlistService.findByTitle(this.state.searchNameEntity)\r\n      .then(response => {\r\n        this.setState({\r\n          entityList: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n  onChangeSearchName=(e)=>{\r\n      const  searchName = e.target.value;\r\n      this.setState({\r\n        searchNameEntity:searchName\r\n      })\r\n  }\r\n  render(){\r\n    const {searchNameEntity, entityList, currentEntity, currentIndex } = this.state;\r\n    const {entity} = this.props\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Искать по имени..\"\r\n              value={searchNameEntity}\r\n              onChange={this.onChangeSearchName}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchNameEntity}\r\n              >\r\n                Поиск сущности\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Список сущностей в БД:</h4>\r\n        \r\n          <ul className=\"list-group\">\r\n            {entityList &&\r\n            entityList.map((entityList, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \" +\r\n                  (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                onClick={() => this.setActiveEntity(entityList, index)}\r\n                key={index}\r\n              >\r\n                {entityList.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        \r\n          {/*<button*/}\r\n          {/*  className=\"m-3 btn btn-sm btn-danger\"*/}\r\n          {/*  onClick={this.removeAllTutorials}*/}\r\n          {/*>*/}\r\n          {/*  Remove All*/}\r\n          {/*</button>*/}\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Список элементов на клиенте: {this.props.entity.length}</h4>\r\n        \r\n          <ul className=\"list-group\">\r\n            {entity &&\r\n            entity.map((item, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \" +\r\n                  (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                onClick={() => this.setActiveEntity(item, index)}\r\n                key={index}\r\n              >\r\n                {item.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n       \r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentEntity ? (\r\n            <div>\r\n              <h4>Сущность</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Имя сущности:</strong>\r\n                </label>{' '}\r\n                {currentEntity.name}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Родитель</strong>\r\n                </label>{\" \"}\r\n                {currentEntity.parent}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Потомки</strong>\r\n                </label>{\" \"}\r\n                {currentEntity.children}\r\n              </div>\r\n              \r\n              <div>\r\n                <label>\r\n                  <strong>Дата создания:</strong>\r\n                </label>{\" \"}\r\n                {currentEntity.timestamp.toString()}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Строковый атрибут:</strong>\r\n                </label>{\" \"}\r\n                {currentEntity.stringAtribute}\r\n              </div>\r\n            \r\n              <Link\r\n                current = {this.state.currentEntity}\r\n                to={\"/edit/\" + currentEntity.name}\r\n                className=\"badge badge-warning\"\r\n                \r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Выберите из списка...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport GetlistService from '../services/dao-service'\r\nimport Pool from '../services/db-access'\r\n\r\nexport default class Entity extends Component {\r\n\tstate = {\r\n\t\tname: 'curent_Name',\r\n\t\tid: 0,\r\n\t\tparent: null,\r\n\t\tchildren: [],\r\n\t\tstringAtribute: '',\r\n\t\ttimestamp: 0\r\n  };\r\n  resetState(){\r\n  \tthis.setState({})\r\n\t}\r\n  onChangeName = (e) => {\r\n    this.setState({\r\n      name: e.target.value,\r\n\t\t\ttimestamp:this.timestamp()\r\n    });\r\n  }\r\n\ttimestamp = ()=>{\r\n  \treturn new Date()\r\n\t}\r\n  onChangeParent=(e)=>{\r\n    this.setState({\r\n      parent: e.target.value\r\n    });\r\n  }\r\n\t\r\n\tonChangeChildren=(e)=>{\r\n\t\tthis.setState({\r\n\t\t\tchildren: e.target.value\r\n\t\t});\r\n\t}\r\n\tonChangeStringAtribute=(e)=> {\r\n\t\tthis.setState({\r\n\t\t\tstringAtribute: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n  saveEntity() {\r\n    var data = {\r\n      name: this.state.name,\r\n\t\t\tstringAtribute: this.state.stringAtribute\r\n    };\r\n\t\tPool.query(\r\n\t\t\t'INSERT INTO main-taible(name, id, string_attr, children, time_create) VALUES '\r\n\t\t\t \t\t\t `(${this.state.name},[value-2],[value-3],[value-4],[value-5])`\r\n\t\t)\r\n\t\t// GetlistService.create(data)\r\n    //   .then(response => {\r\n    //     this.setState({\r\n    //       id: response.data.id,\r\n    //       name: response.data.name,\r\n\t\t// \t\t\tstringAtribute: response.data.stringAtribute,\r\n    //       published: response.data.published,\r\n    //       submitted: true\r\n    //     });\r\n    //     console.log(response.data);\r\n    //   })\r\n    //   .catch(e => {\r\n    //     console.log(e);\r\n    //   });\r\n\t\t\r\n  }\r\n\r\n  newEntity() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n\t\t\tstringAtribute: \"\",\r\n      published: false,\r\n      submitted: false\r\n    });\r\n  }\r\n  componentDidMount() {\r\n  \r\n\t}\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t}\r\n\tsubmit(obj){\r\n\t\tthis.props.addItem(this.state)\r\n\t\tconsole.log(obj)\r\n\t\t//GetlistService.create(obj)\r\n\t\t\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tname,\r\n\t\t\tid,\r\n\t\t\tparent,\r\n\t\t\tchildren,\r\n\t\t\tnumber,\r\n\t\t\tstringAtribute,\r\n\t\t} = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"submit-form\">\r\n\t\t\t\t{this.state.submitted ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h4>Сущность отправлена в БД</h4>\r\n\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={this.newEntity}>\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"name\">Имя сущности</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\tonChange={this.onChangeName}\r\n\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"description\">Строковый атрибут</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"stringAtribute\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tvalue={this.state.stringAtribute}\r\n\t\t\t\t\t\t\t\tonChange={this.onChangeStringAtribute}\r\n\t\t\t\t\t\t\t\tname=\"stringAtribute\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"parent\">Родительский элемент</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"parent\"\r\n\t\t\t\t\t\t\t\t//required\r\n\t\t\t\t\t\t\t\tvalue={this.state.parent}\r\n\t\t\t\t\t\t\t\tonChange={this.onChangeParent}\r\n\t\t\t\t\t\t\t\tname=\"parent\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div><div className=\"form-group\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"children\">Дочерние элементы</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"children\"\r\n\t\t\t\t\t\t\t\t//required\r\n\t\t\t\t\t\t\t\tvalue={this.state.children}\r\n\t\t\t\t\t\t\t\tonChange={this.onChangeChildren}\r\n\t\t\t\t\t\t\t\tname=\"children\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"id\">Номер элемента</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"id\"\r\n\t\t\t\t\t\t\t\t//required\r\n\t\t\t\t\t\t\t\tvalue={this.state.id}\r\n\t\t\t\t\t\t\t\tonChange={()=>{\r\n\t\t\t\t\t\t\t\t\tconsole.log('change id???')}}\r\n\t\t\t\t\t\t\t\tname=\"id\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div><div className=\"form-group\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"timestamp\">Время создания</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"timestamp\"\r\n\t\t\t\t\t\t\t\t//required\r\n\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\tvalue={this.state.timestamp}\r\n\t\t\t\t\t\t\t\tonChange={()=>{\r\n\t\t\t\t\t\t\t\t\tconsole.log('redo timestamp???')}}\r\n\t\t\t\t\t\t\t\tname=\"timestamp\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t//onClick={()=> this.props.addItem(this.state)}\r\n\t\t\t\t\t\t\tonClick={()=> this.submit(this.state)}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\">\r\n\t\t\t\t\t\t\tОтправить в БД\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Entity from \"./Entity\";\r\n\r\n\r\nexport default class EditEntity extends Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <Entity/>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport { Button, Col, Container, Row } from 'react-bootstrap'\r\nimport Entity from './Entity'\r\n\r\nexport default class AddEntity extends Component{\r\n  state = {\r\n    entity: Entity,\r\n    countEntity: 0\r\n  }\r\n  render(){\r\n    const{entity, countEntity} = this.state\r\n  return(\r\n    \r\n      <div>\r\n        <Entity\r\n          addItem = { this.props.addItem }\r\n        />\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\"></label>\r\n          {/*<input*/}\r\n          {/*  type=\"text\"*/}\r\n          {/*  className=\"form-control\"*/}\r\n          {/*  id=\"title\"*/}\r\n          {/*  required*/}\r\n          {/*  value={this.state.title}*/}\r\n          {/*  onChange={this.onChangeTitle}*/}\r\n          {/*  name=\"title\"*/}\r\n          {/*/>*/}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Button\r\n            disabled\r\n          >{ this.props.countItem } Элементов в базе\r\n          </Button>\r\n        </div>\r\n        \r\n        {/*<div className=\"form-group\">*/}\r\n        {/*  <Button*/}\r\n        {/*    variant=\"primary\"*/}\r\n        {/*    size=\"sm\"*/}\r\n        {/*    onClick ={ ()=>{this.props.addItem(this.state.entity)} }*/}\r\n        {/*  >Добавить сущность в список</Button>*/}\r\n        {/*</div>*/}\r\n        \r\n        \r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component, Fragment} from 'react'\r\nimport {BrowserRouter, Route} from 'react-router-dom'\r\nimport Header from './component/Header'\r\nimport ItemList from './component/ItemList';\r\nimport EditEntity from './component/EditEntity';\r\nimport AddEntity from './component/AddEntity'\r\nimport Entity from './component/Entity'\r\n\r\n\r\nexport default class App extends Component{\r\nstate = {\r\nentity: []\r\n}\r\nentityCount = ()=>{  \r\n  const {entity} = this.state\r\n  return(\r\n    entity.length\r\n  )\r\n}\r\n  addItem = (item)=>{\r\n    const { entity } = this.state\r\n    const isExsist = entity.filter(e => e.name == item.name)\r\n    if (isExsist.length >0)return\r\n    this.setState((state) =>{\r\n      return(state.entity.push(item))\r\n    })\r\n}\r\n  \r\n  render(){\r\n  return (\r\n    <Fragment>\r\n      <BrowserRouter>\r\n        <Header/>      \r\n        <Route\r\n          path = \"/list\"\r\n          render = {(props)=>(\r\n            <ItemList  entity = {this.state.entity}/>\r\n          )}\r\n          exact/>\r\n          <Route\r\n          path = \"/list/:id\"\r\n          render = {(props)=>(\r\n            <Entity  entity = {this.state.entity}/>\r\n          )}\r\n          exact/>\r\n        <Route\r\n          path = \"/edit\"\r\n          render = {(props) => (\r\n          <EditEntity entity = {this.state.entity} />) }\r\n         />\r\n        <Route\r\n        path = \"/add\"\r\n        render = { (props) => (\r\n          <AddEntity\r\n          addItem = { this.addItem }\r\n          countItem={this.entityCount()} /> \r\n          )} \r\n          exact       \r\n        />\r\n      </BrowserRouter>\r\n    </Fragment>\r\n    );\r\n}\r\n  \r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(  \r\n    <App/>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}